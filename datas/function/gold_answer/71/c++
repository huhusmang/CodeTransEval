int collectTheCoins(vector<int> &coins, vector<vector<int>> &edges) {
    int n = coins.size();
    vector<vector<int>> g(n);
    vector<int> deg(n);
    for (auto &e: edges) {
        int x = e[0], y = e[1];
        g[x].push_back(y);
        g[y].push_back(x); 
        deg[x]++;
        deg[y]++; 
    }
    int left_edges = n - 1; 
    vector<int> q;
    for (int i = 0; i < n; i++)
        if (deg[i] == 1 && coins[i] == 0) 
            q.push_back(i);
    while (!q.empty()) {
        left_edges--; 
        int x = q.back(); q.pop_back();
        for (int y: g[x])
            if (--deg[y] == 1 && coins[y] == 0) 
                q.push_back(y);
    }
    for (int i = 0; i < n; i++)
        if (deg[i] == 1 && coins[i]) 
            q.push_back(i);
    left_edges -= q.size(); 
    for (int x: q) 
        for (int y: g[x])
            if (--deg[y] == 1) 
                left_edges--; 
    return max(left_edges * 2, 0);
}