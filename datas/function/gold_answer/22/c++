int maxNumberOfAlloys(int n, int k, int budget, vector<vector<int>> &composition, vector<int> &stock, vector<int> &cost) {
    int ans = 0;
    int mx = *min_element(stock.begin(), stock.end()) + budget;
    for (auto &com: composition) {
        auto check = [&](long long num) -> bool {
            long long money = 0;
            for (int i = 0; i < n; i++) {
                if (stock[i] < com[i] * num) {
                    money += (com[i] * num - stock[i]) * cost[i];
                    if (money > budget) {
                        return false;
                    }
                }
            }
            return true;
        };
        int left = 0, right = mx + 1;
        while (left + 1 < right) { 
            int mid = (left + right) / 2;
            (check(mid) ? left : right) = mid;
        }
        ans = max(ans, left);
    }
    return ans;
}