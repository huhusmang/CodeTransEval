public static  int bsearch(List<Integer> arr, int x) {
    int low = 0;
    int high = arr.size() - 1;
    int mid = 0;
    while (low <= high) {
        mid = low + (high - low) / 2;
        if (arr.get(mid) < x) {
            high = mid - 1;
        } else if (arr.get(mid) > x) {
            low = mid + 1;
        } else {
            return mid + 1;
        }
    }
    return low + 1;
}
public static  List<Integer> climbingLeaderboard(List<Integer> ranked, List<Integer> player) {
    LinkedHashSet<Integer> rankSet = new LinkedHashSet<>(ranked);
    List<Integer> rankNums = new ArrayList<>(rankSet);
    Collections.sort(rankNums, Collections.reverseOrder());
    List<Integer> result = new ArrayList<>();
    for (int score : player) {
        int rank = bsearch(rankNums, score);
        result.add(rank);
    }
    return result;
}