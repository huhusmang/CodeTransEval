public static long maxSum(List<Integer> nums, int m, int k) {
    var a = nums.stream().mapToInt(i -> i).toArray();
    long ans = 0, sum = 0;
    var cnt = new HashMap<Integer, Integer>();
    for (int i = 0; i < k - 1; i++) { 
        sum += a[i];
        cnt.merge(a[i], 1, Integer::sum);
    }
    for (int i = k - 1; i < nums.size(); i++) {
        sum += a[i]; 
        cnt.merge(a[i], 1, Integer::sum);
        if (cnt.size() >= m)
            ans = Math.max(ans, sum);
        int out = a[i - k + 1];
        sum -= out; 
        if (cnt.merge(out, -1, Integer::sum) == 0)
            cnt.remove(out);
    }
    return ans;
}