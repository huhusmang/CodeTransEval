public static int minimumOperations(List<Integer> nums) {
    List<Integer> g = new ArrayList<>();
    for (int x : nums) {
        int j = upperBound(g, x);
        if (j == g.size()) g.add(x);
        else g.set(j, x);
    }
    return nums.size() - g.size();
}
public static int upperBound(List<Integer> g, int target) {
    int left = -1, right = g.size();
    while (left + 1 < right) {
        int mid = (left + right) >>> 1;
        if (g.get(mid) <= target)
            left = mid;
        else
            right = mid;
    }
    return right;
}