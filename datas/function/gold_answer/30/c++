long countInterestingSubarrays(vector<int> nums, int modulo, int k) {
    int n = nums.size();
    long ans = 0;
    vector<int> preSum(n+1);
    for(int i=0;i<n;i++)
        preSum[i+1] = preSum[i] + (nums[i] % modulo == k?1:0);
    unordered_map<int,int> map;
    for(int i=0;i<=n;i++){
        if(map.count((preSum[i]%modulo - k + modulo)%modulo))
            ans += map[(preSum[i]%modulo - k + modulo)%modulo];
        map[preSum[i]%modulo]++;
    }
    return ans;
}